import{O as j,C as $}from"./bsConstants-E4N5t5Rc.js";import{M as nb}from"./bsSceneCache-cV13Ardw.js";var ab=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};const ib="modulepreload",Yb=function(p){return"/"+p},rd={},Al=function(u,G,Y){let R=Promise.resolve();if(G&&G.length>0){const e=document.getElementsByTagName("link");R=Promise.all(G.map(b=>{if(b=Yb(b),b in rd)return;rd[b]=!0;const i=b.endsWith(".css"),X=i?'[rel="stylesheet"]':"";if(!!Y)for(let n=e.length-1;n>=0;n--){const V=e[n];if(V.href===b&&(!i||V.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${b}"]${X}`))return;const W=document.createElement("link");if(W.rel=i?"stylesheet":ib,i||(W.as="script",W.crossOrigin=""),W.href=b,document.head.appendChild(W),i)return new Promise((n,V)=>{W.addEventListener("load",n),W.addEventListener("error",()=>V(new Error(`Unable to preload CSS for ${b}`)))})}))}return R.then(()=>u()).catch(e=>{const b=new Event("vite:preloadError",{cancelable:!0});if(b.payload=e,window.dispatchEvent(b),!b.defaultPrevented)throw e})};var sb=Object.defineProperty,eb=(p,u,G)=>u in p?sb(p,u,{enumerable:!0,configurable:!0,writable:!0,value:G}):p[u]=G,Wl=(p,u,G)=>(eb(p,typeof u!="symbol"?u+"":u,G),G),Xd=(p,u,G)=>{if(!u.has(p))throw TypeError("Cannot "+G)},K=(p,u,G)=>(Xd(p,u,"read from private field"),G?G.call(p):u.get(p)),O=(p,u,G)=>{if(u.has(p))throw TypeError("Cannot add the same private member more than once");u instanceof WeakSet?u.add(p):u.set(p,G)},ll=(p,u,G,Y)=>(Xd(p,u,"write to private field"),Y?Y.call(p,G):u.set(p,G),G),Rl=(p,u,G,Y)=>({set _(R){ll(p,u,R,G)},get _(){return K(p,u,Y)}}),ul=(p,u,G)=>(Xd(p,u,"access private method"),G);function hb(p){const{selector:u,id:G}=p;if(!u||typeof u!="string")throw new Error("You must provide a DOM selector as the first argument in order to render the Dice Box");let Y;const R=document.querySelector(u);if(!(R!=null&&R.nodeName))throw new Error(`DiceBox target DOM node: '${u}' not found or not available yet. Try invoking inside a DOMContentLoaded event`);return R.nodeName.toLowerCase()!=="canvas"?(Y=document.createElement("canvas"),Y.id=G,R.appendChild(Y)):Y=R,Y}const Ud="",Bd=typeof window<"u"&&window.Blob&&new Blob([atob(Ud)],{type:"text/javascript;charset=utf-8"});function pb(){let p;try{if(p=Bd&&(window.URL||window.webkitURL).createObjectURL(Bd),!p)throw"";return new Worker(p)}catch{return new Worker("data:application/javascript;base64,"+Ud)}finally{p&&(window.URL||window.webkitURL).revokeObjectURL(p)}}const Jb=p=>{let u;return function(){let G=this,Y=arguments;u&&window.cancelAnimationFrame(u),u=window.requestAnimationFrame(function(){p.apply(G,Y)})}},tb=(p={dedupe:!1})=>{const{dedupe:u}=p;let G=[],Y;const R=b=>(u&&(G=[]),G.push(b),Y||(Y=e()),Y.finally(()=>{Y=void 0})),e=async()=>{const b=[];for(;G.length;){const i=G.shift();b.push(await i())}return b};return{push:R,queue:G,flush:()=>Y||Promise.resolve([])}},xb=p=>JSON.parse(JSON.stringify(p));class kd{static value(){const u=window.crypto||window.msCrypto,G=new Uint32Array(1);return u.getRandomValues(G)[0]/2**32}static range(u,G){return Math.floor(Math.pow(10,14)*this.value()*this.value())%(G-u+1)+u}}const ob=p=>{let u=!1,G=p.slice(p.startsWith("#")?1:0);G.length===3?G=[...G].map(R=>R+R).join(""):G.length===8&&(u=!0),G=parseInt(G,16);let Y={r:G>>>16,g:(G&65280)>>>8,b:G&255};return u&&(Y.r=G>>>24,Y.g=(G&16711680)>>>16,Y.b=(G&65280)>>>8,Y.a=G&255),Y};function vb(){try{const p=document.createElement("canvas");return!!window.WebGLRenderingContext&&(p.getContext("webgl")||p.getContext("experimental-webgl"))}catch{return!1}}const yb={id:`dice-canvas-${Date.now()}`,enableShadows:!0,shadowTransparency:.8,lightIntensity:1,delay:10,scale:5,theme:"default",themeColor:"#2e8555",offscreen:!0,assetPath:"/assets/dice-box/",origin:typeof window<"u"?window.location.origin:"",meshFile:"models/default.json",suspendSimulation:!1};var Vl,al,Fl,Hl,D,xl,Ll,_,il,Nl,ml,$l,Qd,_l,Pd,ld,jd,Sl,dd,fl,bd;class Lb{constructor(u,G={}){if(O(this,$l),O(this,_l),O(this,ld),O(this,Sl),O(this,fl),Wl(this,"rollCollectionData",{}),Wl(this,"rollGroupData",{}),Wl(this,"rollDiceData",{}),Wl(this,"themeData",[]),Wl(this,"themesLoadedData",{}),O(this,Vl,0),O(this,al,0),O(this,Fl,0),O(this,Hl,0),O(this,D,{}),O(this,xl,void 0),O(this,Ll,void 0),O(this,_,void 0),O(this,il,void 0),O(this,Nl,void 0),O(this,ml,!0),Wl(this,"noop",()=>{}),typeof G!="object")throw new Error("Config options should be an object. Config reference: https://fantasticdice.games/docs/usage/config#configuration-options");const{onDieComplete:Y,onRollComplete:R,onRemoveComplete:e,onThemeConfigLoaded:b,onThemeLoaded:i,...X}=G;this.config={...yb,...X},this.onDieComplete=G.onDieComplete||this.noop,this.onRollComplete=G.onRollComplete||this.noop,this.onRemoveComplete=G.onRemoveComplete||this.noop,this.onThemeLoaded=G.onThemeLoaded||this.noop,this.onThemeConfigLoaded=G.onThemeConfigLoaded||this.noop,vb()?(this.canvas=hb({selector:u,id:this.config.id}),this.isVisible=!0):ll(this,ml,!1),this.loadThemeQueue=tb({dedupe:!0})}resizeWorld(){const u=Jb(()=>{K(this,D).resize({width:this.canvas.clientWidth,height:this.canvas.clientHeight}),K(this,_)&&K(this,_).postMessage({action:"resize",width:this.canvas.clientWidth,height:this.canvas.clientHeight})});window.addEventListener("resize",u)}async init(){return K(this,ml)?ul(this,_l,Pd).call(this):ll(this,il,Promise.resolve()),await ul(this,$l,Qd).call(this),this.resizeWorld(),K(this,D).onRollResult=u=>{const G=this.rollDiceData[u.rollId],Y=this.rollGroupData[G.groupId],R=this.rollCollectionData[G.collectionId];Y.rolls[G.rollId].value=u.value,R.completedRolls++,R.completedRolls==R.rolls.length&&R.resolve(Object.values(R.rolls).map(({collectionId:X,id:l,meshName:W,...n})=>n));const{collectionId:e,id:b,...i}=G;this.onDieComplete(i)},K(this,D).onRollComplete=()=>{this.onRollComplete(this.getRollResults())},K(this,D).onDieRemoved=u=>{let G=this.rollDiceData[u];const Y=this.rollCollectionData[G.removeCollectionId];Y.completedRolls++,delete this.rollDiceData[G.rollId];const R=this.rollGroupData[G.groupId];delete R.rolls[G.rollId];const e=ul(this,fl,bd).call(this,G.groupId);R.value=e.value,R.qty=e.rollsArray.length,Y.completedRolls==Y.rolls.length&&Y.resolve(Object.values(Y.rolls).map(({id:n,...V})=>V));const{collectionId:b,id:i,removeCollectionId:X,meshName:l,...W}=G;this.onRemoveComplete(W)},await Promise.all([K(this,xl),K(this,il)]),K(this,_)&&ul(this,ld,jd).call(this),await this.loadThemeQueue.push(()=>this.loadTheme(this.config.theme)),this}async getThemeConfig(u){const G=`${this.config.origin}${this.config.assetPath}themes/${u}`;let Y;u==="default"?Y={name:"Default Colors",material:{type:"color",diffuseTexture:{light:"diffuse-light.png",dark:"diffuse-dark.png"},diffuseLevel:1,bumpTexture:"normal.png",bumpLevel:.5,specularTexture:"specular.jpg",specularPower:1}}:Y=await fetch(`${G}/theme.config.json`).then(b=>{if(b.ok){const i=b.headers.get("content-type");if(i&&i.indexOf("application/json")!==-1||b.type&&b.type==="basic")return b.json();throw new Error(`Incorrect contentType: ${i}. Expected "application/json" or "basic"`)}else throw new Error(`Unable to fetch config file for theme: '${u}'. Request rejected with status ${b.status}: ${b.statusText}`)}).catch(b=>console.error(b));let R=this.config.origin+this.config.assetPath+this.config.meshFile,e="default";if(!Y)throw new Error("No theme config data to work with.");if(Y.hasOwnProperty("meshFile")&&(R=`${G}/${Y.meshFile}`,Y.hasOwnProperty("meshName")?e=Y.meshName:(console.warn("You should provide a meshName in your theme.config.json file"),e=Y.meshFile.replace(/(.*)\..{2,4}$/,"$1"))),Y.hasOwnProperty("diceAvailable")||(Y.diceAvailable=["d4","d6","d8","d10","d12","d20","d100"]),Y.hasOwnProperty("extends")){let b=this.themesLoadedData[Y.extends];b||(b=await this.loadTheme(Y.extends).catch(i=>console.error(i))),b&&(Y.diceInherited=[...Y.diceInherited||[]],b.diceAvailable.map(i=>{Y.diceInherited[i]=b.systemName}))}return Object.assign(Y,{basePath:G,meshFilePath:R,meshName:e,theme:u}),Y}async loadTheme(u){if(this.themesLoadedData[u])return this.themesLoadedData[u];const G=this.themesLoadedData[u]=await this.getThemeConfig(u).catch(Y=>console.error(Y));if(this.onThemeConfigLoaded(G),!!G)return await K(this,D).loadTheme(G).catch(Y=>console.error(Y)),this.onThemeLoaded(G),G}async updateConfig(u){const G={...this.config,...u};return await this.loadThemeQueue.push(()=>this.loadTheme(G.theme)),this.config=G,K(this,D).updateConfig(G),K(this,_)&&K(this,_).postMessage({action:"updateConfig",options:G}),this}clear(){return ll(this,Vl,0),ll(this,al,0),ll(this,Fl,0),ll(this,Hl,0),this.rollCollectionData={},this.rollGroupData={},this.rollDiceData={},K(this,D).clear(),K(this,_)&&K(this,_).postMessage({action:"clearDice"}),this}hide(){return this.canvas&&(this.canvas.style.display="none"),this.isVisible=!1,this}show(){return this.canvas&&(this.canvas.style.display="block"),this.isVisible=!0,this.resizeWorld(),this}roll(u,{theme:G=this.config.theme,themeColor:Y=this.config.themeColor,newStartPoint:R=!0}={}){this.clear();const e=Rl(this,Vl)._++;this.rollCollectionData[e]=new Ol({id:e,notation:u,theme:G,themeColor:Y,newStartPoint:R});const b=this.createNotationArray(u,this.themesLoadedData[G].diceAvailable);return ul(this,Sl,dd).call(this,b,e),this.rollCollectionData[e].promise}add(u,{theme:G=this.config.theme,themeColor:Y=this.config.themeColor,newStartPoint:R=!0}={}){const e=Rl(this,Vl)._++;this.rollCollectionData[e]=new Ol({id:e,notation:u,theme:G,themeColor:Y,newStartPoint:R});const b=this.createNotationArray(u,this.themesLoadedData[G].diceAvailable);return ul(this,Sl,dd).call(this,b,e),this.rollCollectionData[e].promise}reroll(u,{remove:G=!1,hide:Y=!1,newStartPoint:R=!0}={}){const e=(Array.isArray(u)?u:[u]).map(({value:b,...i})=>i);return G===!0&&this.remove(e,{hide:Y}),this.add(e,{newStartPoint:R})}remove(u,{hide:G=!1}={}){const Y=Array.isArray(u)?u:[u],R=Rl(this,Vl)._++;return this.rollCollectionData[R]=new Ol({id:R,notation:u,rolls:Y}),Y.map(e=>{this.rollDiceData[e.rollId].removeCollectionId=R;let b=this.rollDiceData[e.rollId].id;K(this,D).remove({id:b,rollId:e.rollId}),K(this,_)&&K(this,_).postMessage({action:"removeDie",id:b})}),this.rollCollectionData[R].promise}createNotationArray(u,G){const Y=Array.isArray(u)?u:[u];let R=[];const e=X=>{if(X.hasOwnProperty("qty")||(X.qty=1),X.hasOwnProperty("sides"))return X.sides==="100"&&(X.sides=100,X.data="single"),!0;{const l="Roll notation is missing sides";throw new Error(l)}},b=X=>{X=X.toString();let l=X.split(".");return l[1]?l[1]=parseInt(l[1])+1:l[1]=1,l[0]+"."+l[1]},i=X=>{X.hasOwnProperty("rollId")&&this.rollDiceData.hasOwnProperty(X.rollId)&&(X.rollId=b(X.rollId)),X.hasOwnProperty("modifier")||(X.modifier=0)};return Y.forEach(X=>{typeof X=="string"?R.push(this.parse(X,G)):typeof Y=="object"&&(i(X),e(X)&&R.push(X))}),R}parse(u,G){const Y=/(\d+)([dD]{1}\d+)(.*)$/i,R=/(\d+)[dD](00|%)(.*)$/i,e=/(\d+)[dD](f+[ate]*)(.*)$/i,b=/(\d+)[dD]([\d\w]+)([+-]{0,1}\d+)?/i,i=/([+-])(\d+)/,X=u.trim().replace(/\s+/g,""),l=(t,L)=>{if(t=Number(t),Number.isNaN(t)||!Number.isInteger(t)||t<1)throw new Error(L);return t},W=X.match(R)||X.match(Y)||X.match(e)||X.match(b);let n=0;const V="Invalid notation: "+u;if(!W||!W.length||W.length<3)throw new Error(V);if(W[3]&&i.test(W[3])){const t=W[3].match(i);let L=l(t[2],V);t[1].trim()==="-"&&(L*=-1),n=L}const s={qty:l(W[1],V),modifier:n};return X.match(R)?(s.sides="d100",s.data="single"):X.match(e)?s.sides="fate":(G.includes(X.match(b)[2]),s.sides=W[2]),s}getRollResults(){return Object.entries(this.rollGroupData).map(([u,G])=>{const Y=ul(this,fl,bd).call(this,u);G.value=Y.value,G.qty=Y.rollsArray.length;const R={...G};return R.rolls=Y.rollsArray,R})}}Vl=new WeakMap,al=new WeakMap,Fl=new WeakMap,Hl=new WeakMap,D=new WeakMap,xl=new WeakMap,Ll=new WeakMap,_=new WeakMap,il=new WeakMap,Nl=new WeakMap,ml=new WeakMap,$l=new WeakSet,Qd=async function(){ll(this,xl,new Promise((u,G)=>{ll(this,Ll,u)}));const p=()=>{K(this,Ll).call(this)};if(K(this,ml))if("OffscreenCanvas"in window&&"transferControlToOffscreen"in this.canvas&&this.config.offscreen){const u=await Al(()=>import("./world.offscreen-ZSsw4nZV.js"),__vite__mapDeps([])).then(G=>G.default);ll(this,D,new u({canvas:this.canvas,options:this.config,onInitComplete:p}))}else{this.config.offscreen&&(console.warn("This browser does not support OffscreenCanvas. Using standard canvas fallback."),this.config.offscreen=!1);const u=await Al(()=>import("./world.onscreen-JMcmWs8J.js"),__vite__mapDeps([0,1,2,3])).then(G=>G.default);ll(this,D,new u({canvas:this.canvas,options:this.config,onInitComplete:p}))}else{console.warn("This browser does not support WebGL which is required for 3D rendering. Falling back to random number generator");const u=await Al(()=>import("./world.none-kTzKGfUx.js"),__vite__mapDeps([4,1,2,3])).then(G=>G.default);ll(this,D,new u({canvas:this.canvas,options:this.config,onInitComplete:p}))}},_l=new WeakSet,Pd=function(){ll(this,_,new pb),ll(this,il,new Promise((p,u)=>{ll(this,Nl,p)})),K(this,_).onmessage=p=>{switch(p.data.action){case"init-complete":K(this,Nl).call(this)}},K(this,_).postMessage({action:"init",width:this.canvas.clientWidth,height:this.canvas.clientHeight,options:this.config})},ld=new WeakSet,jd=function(){const p=new MessageChannel;K(this,D).connect(p.port1),K(this,_).postMessage({action:"connect"},[p.port2])},Sl=new WeakSet,dd=async function(p,u){const G=this.rollCollectionData[u];let Y=G.newStartPoint;p.forEach(async R=>{if(!R.sides)throw new Error("Improper dice notation or unable to parse notation");const e=R.theme||G.theme||this.config.theme,b=R.themeColor||G.themeColor||this.config.themeColor,i={},X=R.groupId!==void 0;let l;const W=()=>this.loadTheme(e);await this.loadThemeQueue.push(W);const{meshName:n,diceAvailable:V,diceInherited:s={},material:{type:t}}=this.themesLoadedData[e],L=Object.keys(s);let y="",v;t==="color"&&(v=ob(b),y=v.r*.299+v.g*.587+v.b*.114>175?"_dark":"_light");for(var w=0,E=R.qty;w<E;w++){let U=R.rollId!==void 0?R.rollId:Rl(this,Fl)._++,A=R.id!==void 0?R.id:Rl(this,Hl)._++;l=X?R.groupId:K(this,al);const Xl=Number.isInteger(R.sides)?`d${R.sides}`:R.sides;/^d[1-9]{1}[0-9]{0,1}0?$/.test(R.sides)&&(R.sides=parseInt(R.sides.replace("d","")));const q={sides:R.sides,data:R.data,dieType:Xl,groupId:l,collectionId:G.id,rollId:U,id:A,theme:e,themeColor:b,meshName:n};if(i[U]=q,this.rollDiceData[U]=q,G.rolls.push(this.rollDiceData[U]),q.sides==="fate"&&!V.includes(Xl)&&!L.includes(Xl)||q.sides==="fate"&&!K(this,ml)){console.warn(`fate die unavailable in '${e}' theme. Using fallback.`);const bl=-1,Gl=1;q.value=kd.range(bl,Gl),K(this,D).addNonDie(q)}else if(this.config.suspendSimulation||!V.includes(Xl)&&!L.includes(Xl)||!K(this,ml)){const bl=K(this,ml)?this.config.suspendSimulation?"3D simulation suspended. Using fallback.":`${q.sides} die unavailable in '${e}' theme. Using fallback.`:"This browser does not support webGL. Using random number fallback.";console.warn(bl);const Gl=Number.isInteger(q.sides)?q.sides:parseInt(q.sides.replace(/\D/g,""));q.value=kd.range(1,Gl),K(this,D).addNonDie(q)}else{let bl;if(L.includes(Xl)){const Gl=s[Xl];bl=this.themesLoadedData[Gl]}K(this,D).add({...q,newStartPoint:Y,theme:bl?.systemName||e,meshName:bl?.meshName||n,colorSuffix:y})}Y=!1}X?Object.assign(this.rollGroupData[l].rolls,i):(R.rolls=i,R.id=l,this.rollGroupData[l]=R,++Rl(this,al)._)})},fl=new WeakSet,bd=function(p){const u=this.rollGroupData[p],G=Object.values(u.rolls).map(({collectionId:R,id:e,meshName:b,...i})=>i);let Y=G.reduce((R,e)=>{const b=isNaN(e.value)?0:e.value;return R+b},0);return Y+=u.modifier?u.modifier:0,{value:Y,rollsArray:G}};class Ol{constructor(u){Object.assign(this,u),this.rolls=u.rolls||[],this.completedRolls=0;const G=this;this.promise=new Promise((Y,R)=>{G.resolve=Y,G.reject=R})}}var Ed={exports:{}};(function(p,u){(function(G,Y){p.exports=Y()})(ab,()=>(()=>{var G={95:(R,e,b)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DiceRoller=void 0;const i=b(51);e.DiceRoller=class{constructor(X,l=1e3){this.randFunction=Math.random,this.maxRollCount=1e3,X&&(this.randFunction=X),this.maxRollCount=l}parse(X){return i.parse(X)}roll(X){const l=i.parse(X);return this.rollType(l)}rollValue(X){return this.roll(X).value}rollParsed(X){return this.rollType(X)}rollType(X){let l;switch(X.type){case"diceExpression":l=this.rollDiceExpr(X);break;case"group":l=this.rollGroup(X);break;case"die":l=this.rollDie(X);break;case"expression":l=this.rollExpression(X);break;case"mathfunction":l=this.rollFunction(X);break;case"inline":l=this.rollType(X.expr);break;case"number":l=Object.assign(Object.assign({},X),{success:null,successes:0,failures:0,valid:!0,order:0});break;default:throw new Error(`Unable to render ${X.type}`)}return X.label&&(l.label=X.label),l}rollDiceExpr(X){const l=this.rollType(X.head),W=[l],n=[],V=X.ops.reduce((s,t,L)=>{const y=this.rollType(t.tail);switch(y.order=L,W.push(y),n.push(t.op),t.op){case"+":return s+y.value;case"-":return s-y.value;default:return s}},l.value);return{dice:W,ops:n,success:null,successes:0,failures:0,type:"diceexpressionroll",valid:!0,value:V,order:0}}rollGroup(X){let l=X.rolls.map((t,L)=>Object.assign(Object.assign({},this.rollType(t)),{order:L})),W=0,n=0,V=!1;if(X.mods){const t=X.mods,L=y=>(V=t.some(v=>["failure","success"].includes(v.type)),y=t.reduce((v,w)=>this.applyGroupMod(v,w),y),V&&(y=y.map(v=>(W+=v.successes,n+=v.failures,v.value=v.successes-v.failures,v.success=v.value>0,v))),y);if(l.length===1&&["die","diceexpressionroll"].includes(l[0].type)){const y=l[0];let v=y.type==="die"?y.rolls:y.dice.filter(w=>w.type!=="number").reduce((w,E)=>[...w,...E.type==="die"?E.rolls:E.dice],[]);v=L(v),y.value=v.reduce((w,E)=>E.valid?w+E.value:w,0)}else l=L(l)}const s=l.reduce((t,L)=>L.valid?t+L.value:t,0);return{dice:l,success:V?s>0:null,successes:W,failures:n,type:"grouproll",valid:!0,value:s,order:0}}rollDie(X){const l=this.rollType(X.count);if(l.value>this.maxRollCount)throw new Error("Entered number of dice too large.");let W,n;X.die.type==="fate"?(n={type:"fate",success:null,successes:0,failures:0,valid:!1,value:0,order:0},W=Array.from({length:l.value},(v,w)=>this.generateFateRoll(w))):(n=this.rollType(X.die),W=Array.from({length:l.value},(v,w)=>this.generateDiceRoll(n.value,w))),X.mods&&(W=X.mods.reduce((v,w)=>this.applyMod(v,w),W));let V=0,s=0;X.targets&&(W=X.targets.reduce((v,w)=>this.applyMod(v,w),W).map(v=>(V+=v.successes,s+=v.failures,v.value=v.successes-v.failures,v.success=v.value>0,v)));let t=!1,L=0;if(X.match){const v=X.match,w=W.reduce((U,A)=>U.set(A.roll,(U.get(A.roll)||0)+1),new Map),E=new Set(Array.from(w.entries()).filter(([U,A])=>A>=v.min.value).filter(([U])=>!(v.mod&&v.expr)||this.successTest(v.mod,this.rollType(v.expr).value,U)).map(([U])=>U));W.filter(U=>E.has(U.roll)).forEach(U=>U.matched=!0),v.count&&(t=!0,L=E.size)}X.sort&&(W=this.applySort(W,X.sort));const y=W.reduce((v,w)=>w.valid?v+w.value:v,0);return{count:l,die:n,rolls:W,success:X.targets?y>0:null,successes:V,failures:s,type:"die",valid:!0,value:t?L:y,order:0,matched:t}}rollExpression(X){const l=this.rollType(X.head),W=[l],n=[],V=X.ops.reduce((s,t)=>{const L=this.rollType(t.tail);switch(W.push(L),n.push(t.op),t.op){case"+":return s+L.value;case"-":return s-L.value;case"*":return s*L.value;case"/":return s/L.value;case"%":return s%L.value;case"**":return s**L.value;default:return s}},l.value);return{dice:W,ops:n,success:null,successes:0,failures:0,type:"expressionroll",valid:!0,value:V,order:0}}rollFunction(X){const l=this.rollType(X.expr);let W;switch(X.op){case"floor":W=Math.floor(l.value);break;case"ceil":W=Math.ceil(l.value);break;case"round":W=Math.round(l.value);break;case"abs":W=Math.abs(l.value);break;default:W=l.value}return{expr:l,op:X.op,success:null,successes:0,failures:0,type:"mathfunction",valid:!0,value:W,order:0}}applyGroupMod(X,l){return this.getGroupModMethod(l)(X)}getGroupModMethod(X){const l=W=>W.value;switch(X.type){case"success":return this.getSuccessMethod(X,l);case"failure":return this.getFailureMethod(X,l);case"keep":return this.getKeepMethod(X,l);case"drop":return this.getDropMethod(X,l);default:throw new Error(`Mod ${X.type} is not recognised`)}}applyMod(X,l){return this.getModMethod(l)(X)}getModMethod(X){const l=W=>W.roll;switch(X.type){case"success":return this.getSuccessMethod(X,l);case"failure":return this.getFailureMethod(X,l);case"crit":return this.getCritSuccessMethod(X,l);case"critfail":return this.getCritFailureMethod(X,l);case"keep":return W=>this.getKeepMethod(X,l)(W).sort((n,V)=>n.order-V.order);case"drop":return W=>this.getDropMethod(X,l)(W).sort((n,V)=>n.order-V.order);case"explode":return this.getExplodeMethod(X);case"compound":return this.getCompoundMethod(X);case"penetrate":return this.getPenetrateMethod(X);case"reroll":return this.getReRollMethod(X);case"rerollOnce":return this.getReRollOnceMethod(X);default:throw new Error(`Mod ${X.type} is not recognised`)}}applySort(X,l){return X.sort((W,n)=>l.asc?W.roll-n.roll:n.roll-W.roll),X.forEach((W,n)=>W.order=n),X}getCritSuccessMethod(X,l){const W=this.rollType(X.expr);return n=>n.map(V=>{if(!V.valid||V.type!=="roll"||V.success)return V;const s=V;return this.successTest(X.mod,W.value,l(V))?s.critical="success":s.critical==="success"&&(s.critical=null),V})}getCritFailureMethod(X,l){const W=this.rollType(X.expr);return n=>n.map(V=>{if(!V.valid||V.type!=="roll"||V.success)return V;const s=V;return this.successTest(X.mod,W.value,l(V))?s.critical="failure":s.critical==="failure"&&(s.critical=null),V})}getSuccessMethod(X,l){const W=this.rollType(X.expr);return n=>n.map(V=>(V.valid&&this.successTest(X.mod,W.value,l(V))&&(V.successes+=1),V))}getFailureMethod(X,l){const W=this.rollType(X.expr);return n=>n.map(V=>(V.valid&&this.successTest(X.mod,W.value,l(V))&&(V.failures+=1),V))}getKeepMethod(X,l){const W=this.rollType(X.expr);return n=>{if(n.length===0)return n;n=n.sort((y,v)=>X.highlow==="l"?l(v)-l(y):l(y)-l(v)).sort((y,v)=>(y.valid?1:0)-(v.valid?1:0));const V=Math.max(Math.min(W.value,n.length),0);let s=0,t=0;const L=n.reduce((y,v)=>(v.valid?1:0)+y,0)-V;for(;t<n.length&&s<L;)n[t].valid&&(n[t].valid=!1,n[t].drop=!0,s++),t++;return n}}getDropMethod(X,l){const W=this.rollType(X.expr);return n=>{n=n.sort((L,y)=>X.highlow==="h"?l(y)-l(L):l(L)-l(y));const V=Math.max(Math.min(W.value,n.length),0);let s=0,t=0;for(;t<n.length&&s<V;)n[t].valid&&(n[t].valid=!1,n[t].drop=!0,s++),t++;return n}}getExplodeMethod(X){const l=X.target?this.rollType(X.target.value):null;return W=>{const n=l?V=>this.successTest(X.target.mod,l.value,V.roll):V=>this.successTest("=",V.type==="fateroll"?1:V.die,V.roll);if(W[0].type==="roll"&&n({roll:1})&&n({roll:W[0].die}))throw new Error("Invalid reroll target");for(let V=0;V<W.length;V++){let s=W[V];s.order=V;let t=0;for(;n(s)&&t++<1e3;){s.explode=!0;const L=this.reRoll(s,++V);W.splice(V,0,L),s=L}}return W}}getCompoundMethod(X){const l=X.target?this.rollType(X.target.value):null;return W=>{const n=l?V=>this.successTest(X.target.mod,l.value,V.roll):V=>this.successTest("=",V.type==="fateroll"?1:V.die,V.roll);if(W[0].type==="roll"&&n({roll:1})&&n({roll:W[0].die}))throw new Error("Invalid reroll target");for(let V=0;V<W.length;V++){let s=W[V],t=s.roll,L=0;for(;n(s)&&L++<1e3;){s.explode=!0;const y=this.reRoll(s,V+1);t+=y.roll,s=y}W[V].value=t,W[V].roll=t}return W}}getPenetrateMethod(X){const l=X.target?this.rollType(X.target.value):null;return W=>{const n=l?V=>this.successTest(X.target.mod,l.value,V.roll):V=>this.successTest("=",V.type==="fateroll"?1:V.die,V.roll);if(l&&W[0].type==="roll"&&n(W[0])&&this.successTest(X.target.mod,l.value,1))throw new Error("Invalid reroll target");for(let V=0;V<W.length;V++){let s=W[V];s.order=V;let t=0;for(;n(s)&&t++<1e3;){s.explode=!0;const L=this.reRoll(s,++V);L.value-=1,W.splice(V,0,L),s=L}}return W}}getReRollMethod(X){const l=X.target?this.successTest.bind(null,X.target.mod,this.rollType(X.target.value).value):this.successTest.bind(null,"=",1);return W=>{if(W[0].type==="roll"&&l(1)&&l(W[0].die))throw new Error("Invalid reroll target");for(let n=0;n<W.length;n++)for(;l(W[n].roll);){W[n].reroll=!0,W[n].valid=!1;const V=this.reRoll(W[n],n+1);W.splice(++n,0,V)}return W}}getReRollOnceMethod(X){const l=X.target?this.successTest.bind(null,X.target.mod,this.rollType(X.target.value).value):this.successTest.bind(null,"=",1);return W=>{if(W[0].type==="roll"&&l(1)&&l(W[0].die))throw new Error("Invalid reroll target");for(let n=0;n<W.length;n++)if(l(W[n].roll)){W[n].reroll=!0,W[n].valid=!1;const V=this.reRoll(W[n],n+1);W.splice(++n,0,V)}return W}}successTest(X,l,W){switch(X){case">":return W>=l;case"<":return W<=l;default:return W==l}}reRoll(X,l){switch(X.type){case"roll":return this.generateDiceRoll(X.die,l);case"fateroll":return this.generateFateRoll(l);default:throw new Error(`Cannot do a reroll of a ${X.type}.`)}}generateDiceRoll(X,l){const W=parseInt((this.randFunction()*X).toFixed(),10)+1;return{critical:W===X?"success":W===1?"failure":null,die:X,matched:!1,order:l,roll:W,success:null,successes:0,failures:0,type:"roll",valid:!0,value:W}}generateFateRoll(X){const l=Math.floor(3*this.randFunction())-1;return{matched:!1,order:X,roll:l,success:null,successes:0,failures:0,type:"fateroll",valid:!0,value:l}}}},619:(R,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DiscordRollRenderer=void 0,e.DiscordRollRenderer=class{render(b){return this.doRender(b,!0)}doRender(b,i=!1){let X="";switch(b.type){case"diceexpressionroll":X=this.renderGroupExpr(b);break;case"grouproll":X=this.renderGroup(b);break;case"die":X=this.renderDie(b);break;case"expressionroll":X=this.renderExpression(b);break;case"mathfunction":X=this.renderFunction(b);break;case"roll":return this.renderRoll(b);case"fateroll":return this.renderFateRoll(b);case"number":const l=b.label?` (${b.label})`:"";return`${b.value}${l}`;case"fate":return"F";default:throw new Error("Unable to render")}return b.valid||(X="~~"+X.replace(/~~/g,"")+"~~"),i?this.stripBrackets(X):b.label?`(${b.label}: ${X})`:X}renderGroup(b){const i=[];for(const X of b.dice)i.push(this.doRender(X));return i.length>1?`{ ${i.join(" + ")} } = ${b.value}`:`{ ${this.stripBrackets(i[0])} } = ${b.value}`}renderGroupExpr(b){const i=[];for(const X of b.dice)i.push(this.doRender(X));return i.length>1?`(${i.join(" + ")} = ${b.value})`:i[0]}renderDie(b){const i=[];for(const W of b.rolls)i.push(this.doRender(W));let X=`${i.join(", ")}`;["number","fate"].includes(b.die.type)&&b.count.type==="number"||(X+=`[*Rolling: ${this.doRender(b.count)}d${this.doRender(b.die)}*]`);const l=b.matched?" Match"+(b.value===1?"":"es"):"";return X+=` = ${b.value}${l}`,`(${X})`}renderExpression(b){if(b.dice.length>1){const i=[];for(let X=0;X<b.dice.length-1;X++)i.push(this.doRender(b.dice[X])),i.push(b.ops[X]);return i.push(this.doRender(b.dice.slice(-1)[0])),i.push("="),i.push(b.value+""),`(${i.join(" ")})`}return b.dice[0].type==="number"?b.value+"":this.doRender(b.dice[0])}renderFunction(b){const i=this.doRender(b.expr);return`(${b.op}${this.addBrackets(i)} = ${b.value})`}addBrackets(b){return b.startsWith("(")||(b=`(${b}`),b.endsWith(")")||(b=`${b})`),b}stripBrackets(b){return b.startsWith("(")&&(b=b.substring(1)),b.endsWith(")")&&(b=b.substring(0,b.length-1)),b}renderRoll(b){let i=`${b.roll}`;return b.valid?b.success&&b.value===1?i=`**${b.roll}**`:b.success&&b.value===-1?i=`*${b.roll}*`:b.success||b.critical!=="success"?b.success||b.critical!=="failure"||(i=`*${b.roll}*`):i=`**${b.roll}**`:i=`~~${b.roll}~~`,b.matched&&(i=`__${i}__`),i}renderFateRoll(b){const i=b.roll===0?"0":b.roll>0?"+":"-";let X=`${b.roll}`;return b.valid?b.success&&b.value===1?X=`**${i}**`:b.success&&b.value===-1&&(X=`*${i}*`):X=`~~${i}~~`,b.matched&&(X=`__${X}__`),X}}},607:function(R,e,b){var i=this&&this.__createBinding||(Object.create?function(l,W,n,V){V===void 0&&(V=n);var s=Object.getOwnPropertyDescriptor(W,n);s&&!("get"in s?!W.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return W[n]}}),Object.defineProperty(l,V,s)}:function(l,W,n,V){V===void 0&&(V=n),l[V]=W[n]}),X=this&&this.__exportStar||function(l,W){for(var n in l)n==="default"||Object.prototype.hasOwnProperty.call(W,n)||i(W,l,n)};Object.defineProperty(e,"__esModule",{value:!0}),X(b(95),e),X(b(604),e),X(b(234),e),X(b(619),e),X(b(54),e)},604:(R,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},234:(R,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},54:(R,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},51:R=>{function e(b,i,X,l){this.message=b,this.expected=i,this.found=X,this.location=l,this.name="SyntaxError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,e)}(function(b,i){function X(){this.constructor=b}X.prototype=i.prototype,b.prototype=new X})(e,Error),e.buildMessage=function(b,i){var X={literal:function(V){return'"'+W(V.text)+'"'},class:function(V){var s,t="";for(s=0;s<V.parts.length;s++)t+=V.parts[s]instanceof Array?n(V.parts[s][0])+"-"+n(V.parts[s][1]):n(V.parts[s]);return"["+(V.inverted?"^":"")+t+"]"},any:function(V){return"any character"},end:function(V){return"end of input"},other:function(V){return V.description}};function l(V){return V.charCodeAt(0).toString(16).toUpperCase()}function W(V){return V.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(s){return"\\x0"+l(s)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(s){return"\\x"+l(s)})}function n(V){return V.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(s){return"\\x0"+l(s)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(s){return"\\x"+l(s)})}return"Expected "+function(V){var s,t,L,y=new Array(V.length);for(s=0;s<V.length;s++)y[s]=(L=V[s],X[L.type](L));if(y.sort(),y.length>0){for(s=1,t=1;s<y.length;s++)y[s-1]!==y[s]&&(y[t]=y[s],t++);y.length=t}switch(y.length){case 1:return y[0];case 2:return y[0]+" or "+y[1];default:return y.slice(0,-1).join(", ")+", or "+y[y.length-1]}}(b)+" but "+function(V){return V?'"'+W(V)+'"':"end of input"}(i)+" found."},R.exports={SyntaxError:e,parse:function(b,i){i=i!==void 0?i:{};var X,l={},W={start:yd},n=yd,V={type:"any"},s=F("[[",!1),t=F("]]",!1),L=function(Z,c){return c&&(Z.label=c),Z},y=">",v=F(">",!1),w="<",E=F("<",!1),U="=",A=F("=",!1),Xl=F("f",!1),q=F("cs",!1),bl=F("cf",!1),Gl=F("m",!1),gd=F("t",!1),Td=F("k",!1),Zd=F("l",!1),cd=F("h",!1),Kl=F("d",!1),Md=F("{",!1),md=F(",",!1),Dd=F("}",!1),Yl="+",sl=F("+",!1),Ad=F("s",!1),Od=F("a",!1),qd=F("!",!1),$d=F("!!",!1),_d=F("!p",!1),lb=F("r",!1),db=F("ro",!1),bb=F("F",!1),wl=F("%",!1),Gd=F("(",!1),ud=F(")",!1),Cl=F("-",!1),zl=function(Z,c){return c.length==0?Z:{head:Z,type:"expression",ops:c.map(m=>({type:"math",op:m[1],tail:m[3]}))}},Wd=F("*",!1),Vd=F("/",!1),el="**",Rd=F("**",!1),nd="floor",Xb=F("floor",!1),ad="ceil",Zb=F("ceil",!1),id="round",cb=F("round",!1),mb=F("abs",!1),Gb=td("integer"),Yd=/^[0-9]/,sd=Bl([["0","9"]],!1,!1),ub=F("[",!1),ed=/^[^\]]/,hd=Bl(["]"],!0,!1),Wb=F("]",!1),Vb=td("whitespace"),pd=/^[ \t\n\r]/,Jd=Bl([" ","	",`
`,"\r"],!1,!1),d=0,x=0,hl=[{line:1,column:1}],Zl=0,rl=[],h=0;if("startRule"in i){if(!(i.startRule in W))throw new Error(`Can't start parsing from rule "`+i.startRule+'".');n=W[i.startRule]}function F(Z,c){return{type:"literal",text:Z,ignoreCase:c}}function Bl(Z,c,m){return{type:"class",parts:Z,inverted:c,ignoreCase:m}}function td(Z){return{type:"other",description:Z}}function od(Z){var c,m=hl[Z];if(m)return m;for(c=Z-1;!hl[c];)c--;for(m={line:(m=hl[c]).line,column:m.column};c<Z;)b.charCodeAt(c)===10?(m.line++,m.column=1):m.column++,c++;return hl[Z]=m,m}function vd(Z,c){var m=od(Z),a=od(c);return{start:{offset:Z,line:m.line,column:m.column},end:{offset:c,line:a.line,column:a.column}}}function J(Z){d<Zl||(d>Zl&&(Zl=d,rl=[]),rl.push(Z))}function yd(){var Z,c,m,a,N,o;if(Z=d,(c=Ql())!==l){for(m=[],b.length>d?(a=b.charAt(d),d++):(a=l,h===0&&J(V));a!==l;)m.push(a),b.length>d?(a=b.charAt(d),d++):(a=l,h===0&&J(V));m!==l?(x=Z,o=m,(N=c).root=!0,o&&(N.label=o.join("")),Z=c=N):(d=Z,Z=l)}else d=Z,Z=l;return Z}function pl(){var Z,c,m;return Z=d,b.charCodeAt(d)===62?(c=y,d++):(c=l,h===0&&J(v)),c===l&&(b.charCodeAt(d)===60?(c=w,d++):(c=l,h===0&&J(E)),c===l&&(b.charCodeAt(d)===61?(c=U,d++):(c=l,h===0&&J(A)))),c!==l&&(m=cl())!==l?(x=Z,Z=c={type:"success",mod:c,expr:m}):(d=Z,Z=l),Z}function Jl(){var Z,c,m,a;return Z=d,b.charCodeAt(d)===102?(c="f",d++):(c=l,h===0&&J(Xl)),c!==l?(b.charCodeAt(d)===62?(m=y,d++):(m=l,h===0&&J(v)),m===l&&(b.charCodeAt(d)===60?(m=w,d++):(m=l,h===0&&J(E)),m===l&&(b.charCodeAt(d)===61?(m=U,d++):(m=l,h===0&&J(A)))),m===l&&(m=null),m!==l&&(a=cl())!==l?(x=Z,Z=c={type:"failure",mod:m,expr:a}):(d=Z,Z=l)):(d=Z,Z=l),Z}function Ld(){var Z,c,m,a;return Z=d,b.substr(d,2)==="cs"?(c="cs",d+=2):(c=l,h===0&&J(q)),c!==l?(b.charCodeAt(d)===62?(m=y,d++):(m=l,h===0&&J(v)),m===l&&(b.charCodeAt(d)===60?(m=w,d++):(m=l,h===0&&J(E)),m===l&&(b.charCodeAt(d)===61?(m=U,d++):(m=l,h===0&&J(A)))),m===l&&(m=null),m!==l&&(a=cl())!==l?(x=Z,Z=c={type:"crit",mod:m,expr:a}):(d=Z,Z=l)):(d=Z,Z=l),Z}function Nd(){var Z,c,m,a;return Z=d,b.substr(d,2)==="cf"?(c="cf",d+=2):(c=l,h===0&&J(bl)),c!==l?(b.charCodeAt(d)===62?(m=y,d++):(m=l,h===0&&J(v)),m===l&&(b.charCodeAt(d)===60?(m=w,d++):(m=l,h===0&&J(E)),m===l&&(b.charCodeAt(d)===61?(m=U,d++):(m=l,h===0&&J(A)))),m===l&&(m=null),m!==l&&(a=cl())!==l?(x=Z,Z=c={type:"critfail",mod:m,expr:a}):(d=Z,Z=l)):(d=Z,Z=l),Z}function tl(){var Z,c,m,a;return Z=d,b.charCodeAt(d)===107?(c="k",d++):(c=l,h===0&&J(Td)),c!==l?(b.charCodeAt(d)===108?(m="l",d++):(m=l,h===0&&J(Zd)),m===l&&(b.charCodeAt(d)===104?(m="h",d++):(m=l,h===0&&J(cd))),m===l&&(m=null),m!==l?((a=cl())===l&&(a=null),a!==l?(x=Z,Z=c={type:"keep",highlow:m,expr:a||Cd}):(d=Z,Z=l)):(d=Z,Z=l)):(d=Z,Z=l),Z}function ol(){var Z,c,m,a;return Z=d,b.charCodeAt(d)===100?(c="d",d++):(c=l,h===0&&J(Kl)),c!==l?(b.charCodeAt(d)===108?(m="l",d++):(m=l,h===0&&J(Zd)),m===l&&(b.charCodeAt(d)===104?(m="h",d++):(m=l,h===0&&J(cd))),m===l&&(m=null),m!==l?((a=cl())===l&&(a=null),a!==l?(x=Z,Z=c={type:"drop",highlow:m,expr:a||Cd}):(d=Z,Z=l)):(d=Z,Z=l)):(d=Z,Z=l),Z}function kl(){var Z,c,m,a,N,o,S,H,f,r;if(Z=d,(c=Ul())!==l){for(m=[],a=d,(N=z())!==l?(b.charCodeAt(d)===43?(o=Yl,d++):(o=l,h===0&&J(sl)),o!==l&&(S=z())!==l&&(H=Ul())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);a!==l;)m.push(a),a=d,(N=z())!==l?(b.charCodeAt(d)===43?(o=Yl,d++):(o=l,h===0&&J(sl)),o!==l&&(S=z())!==l&&(H=Ul())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);m!==l?(x=Z,f=c,Z=c=(r=m).length==0?f:{head:f,type:"diceExpression",ops:r.map(C=>({type:"math",op:C[1],tail:C[3]}))}):(d=Z,Z=l)}else d=Z,Z=l;return Z}function Ul(){var Z;return(Z=Sd())===l&&(Z=Ql()),Z}function Sd(){var Z,c,m;return Z=d,c=function(){var a,N,o,S,H;if(a=d,N=function(){var f,r,C,Q,B,I;if(f=d,r=function(){var k,T,P,M;return k=d,(T=cl())===l&&(T=null),T!==l?(b.charCodeAt(d)===100?(P="d",d++):(P=l,h===0&&J(Kl)),P!==l?(M=function(){var dl,g;return dl=d,b.charCodeAt(d)===70?(g="F",d++):(g=l,h===0&&J(bb)),g===l&&(b.charCodeAt(d)===102?(g="f",d++):(g=l,h===0&&J(Xl))),g!==l&&(x=dl,g={type:"fate"}),g}(),M===l&&(M=function(){var dl,g;return dl=d,b.charCodeAt(d)===37?(g="%",d++):(g=l,h===0&&J(wl)),g!==l&&(x=dl,g={type:"number",value:"100"}),g}(),M===l&&(M=cl())),M!==l?(x=k,k=T={die:M,count:T||{type:"number",value:1},type:"die"}):(d=k,k=l)):(d=k,k=l)):(d=k,k=l),k}(),r!==l){for(C=[],(Q=Fd())===l&&(Q=Hd())===l&&(Q=fd())===l&&(Q=Kd())===l&&(Q=xd());Q!==l;)C.push(Q),(Q=Fd())===l&&(Q=Hd())===l&&(Q=fd())===l&&(Q=Kd())===l&&(Q=xd());C!==l?(x=f,I=C,(B=r).mods=(B.mods||[]).concat(I),f=r=B):(d=f,f=l)}else d=f,f=l;return f}(),N!==l){for(o=[],(S=ol())===l&&(S=tl())===l&&(S=pl())===l&&(S=Jl())===l&&(S=Nd())===l&&(S=Ld());S!==l;)o.push(S),(S=ol())===l&&(S=tl())===l&&(S=pl())===l&&(S=Jl())===l&&(S=Nd())===l&&(S=Ld());o!==l?((S=function(){var f,r,C,Q,B;return f=d,b.charCodeAt(d)===109?(r="m",d++):(r=l,h===0&&J(Gl)),r!==l?(b.charCodeAt(d)===116?(C="t",d++):(C=l,h===0&&J(gd)),C===l&&(C=null),C!==l?((Q=Tl())===l&&(Q=null),Q!==l?(B=function(){var I,k,T;return I=d,b.charCodeAt(d)===62?(k=y,d++):(k=l,h===0&&J(v)),k===l&&(b.charCodeAt(d)===60?(k=w,d++):(k=l,h===0&&J(E)),k===l&&(b.charCodeAt(d)===61?(k=U,d++):(k=l,h===0&&J(A)))),k!==l&&(T=cl())!==l?(x=I,I=k={mod:k,expr:T}):(d=I,I=l),I}(),B===l&&(B=null),B!==l?(x=f,f=r=function(I,k,T){const P={type:"match",min:k||{type:"number",value:2},count:!!I};return T&&(P.mod=T.mod,P.expr=T.expr),P}(C,Q,B)):(d=f,f=l)):(d=f,f=l)):(d=f,f=l)):(d=f,f=l),f}())===l&&(S=null),S!==l?(H=function(){var f,r,C;return f=d,b.charCodeAt(d)===115?(r="s",d++):(r=l,h===0&&J(Ad)),r!==l?(b.charCodeAt(d)===97?(C="a",d++):(C=l,h===0&&J(Od)),C===l&&(b.charCodeAt(d)===100?(C="d",d++):(C=l,h===0&&J(Kl))),C===l&&(C=null),C!==l?(x=f,f=r=C=="d"?{type:"sort",asc:!1}:{type:"sort",asc:!0}):(d=f,f=l)):(d=f,f=l),f}(),H===l&&(H=null),H!==l?(x=a,a=N=function(f,r,C,Q){const B=r.filter(I=>["success","failure"].includes(I.type));return r=r.filter(I=>!B.includes(I)),f.mods=(f.mods||[]).concat(r),B.length>0&&(f.targets=B),C&&(f.match=C),Q&&(f.sort=Q),f}(N,o,S,H)):(d=a,a=l)):(d=a,a=l)):(d=a,a=l)}else d=a,a=l;return a}(),c!==l&&z()!==l?((m=vl())===l&&(m=null),m!==l?(x=Z,Z=c=L(c,m)):(d=Z,Z=l)):(d=Z,Z=l),Z}function fd(){var Z,c,m;return Z=d,b.charCodeAt(d)===33?(c="!",d++):(c=l,h===0&&J(qd)),c!==l?((m=nl())===l&&(m=null),m!==l?(x=Z,Z=c={type:"explode",target:m}):(d=Z,Z=l)):(d=Z,Z=l),Z}function Fd(){var Z,c,m;return Z=d,b.substr(d,2)==="!!"?(c="!!",d+=2):(c=l,h===0&&J($d)),c!==l?((m=nl())===l&&(m=null),m!==l?(x=Z,Z=c={type:"compound",target:m}):(d=Z,Z=l)):(d=Z,Z=l),Z}function Hd(){var Z,c,m;return Z=d,b.substr(d,2)==="!p"?(c="!p",d+=2):(c=l,h===0&&J(_d)),c!==l?((m=nl())===l&&(m=null),m!==l?(x=Z,Z=c={type:"penetrate",target:m}):(d=Z,Z=l)):(d=Z,Z=l),Z}function xd(){var Z,c,m;return Z=d,b.charCodeAt(d)===114?(c="r",d++):(c=l,h===0&&J(lb)),c!==l?((m=nl())===l&&(m=null),m!==l?(x=Z,Z=c={type:"reroll",target:m||wd}):(d=Z,Z=l)):(d=Z,Z=l),Z}function Kd(){var Z,c,m;return Z=d,b.substr(d,2)==="ro"?(c="ro",d+=2):(c=l,h===0&&J(db)),c!==l?((m=nl())===l&&(m=null),m!==l?(x=Z,Z=c={type:"rerollOnce",target:m||wd}):(d=Z,Z=l)):(d=Z,Z=l),Z}function nl(){var Z,c,m;return Z=d,b.charCodeAt(d)===62?(c=y,d++):(c=l,h===0&&J(v)),c===l&&(b.charCodeAt(d)===60?(c=w,d++):(c=l,h===0&&J(E)),c===l&&(b.charCodeAt(d)===61?(c=U,d++):(c=l,h===0&&J(A)))),c===l&&(c=null),c!==l&&(m=cl())!==l?(x=Z,Z=c={type:"target",mod:c,value:m}):(d=Z,Z=l),Z}function cl(){var Z;return(Z=Pl())===l&&(Z=Tl()),Z}function Ql(){var Z;return(Z=function(){var c,m,a,N;return c=d,b.substr(d,2)==="[["?(m="[[",d+=2):(m=l,h===0&&J(s)),m!==l&&(a=Ql())!==l?(b.substr(d,2)==="]]"?(N="]]",d+=2):(N=l,h===0&&J(t)),N!==l?(x=c,c=m={type:"inline",expr:a}):(d=c,c=l)):(d=c,c=l),c}())===l&&(Z=jl())===l&&(Z=Pl()),Z}function Pl(){var Z,c,m,a,N,o,S;return Z=d,b.charCodeAt(d)===40?(c="(",d++):(c=l,h===0&&J(Gd)),c!==l&&(m=jl())!==l?(b.charCodeAt(d)===41?(a=")",d++):(a=l,h===0&&J(ud)),a!==l&&z()!==l?((N=vl())===l&&(N=null),N!==l?(x=Z,o=m,(S=N)&&(o.label=S),Z=c=o):(d=Z,Z=l)):(d=Z,Z=l)):(d=Z,Z=l),Z}function jl(){var Z,c,m,a,N,o,S,H;if(Z=d,(c=El())!==l){for(m=[],a=d,(N=z())!==l?(b.charCodeAt(d)===43?(o=Yl,d++):(o=l,h===0&&J(sl)),o===l&&(b.charCodeAt(d)===45?(o="-",d++):(o=l,h===0&&J(Cl))),o!==l&&(S=z())!==l&&(H=El())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);a!==l;)m.push(a),a=d,(N=z())!==l?(b.charCodeAt(d)===43?(o=Yl,d++):(o=l,h===0&&J(sl)),o===l&&(b.charCodeAt(d)===45?(o="-",d++):(o=l,h===0&&J(Cl))),o!==l&&(S=z())!==l&&(H=El())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);m!==l?(x=Z,Z=c=zl(c,m)):(d=Z,Z=l)}else d=Z,Z=l;return Z}function El(){var Z,c,m,a,N,o,S,H;if(Z=d,(c=Il())!==l){for(m=[],a=d,(N=z())!==l?(b.charCodeAt(d)===42?(o="*",d++):(o=l,h===0&&J(Wd)),o===l&&(b.charCodeAt(d)===47?(o="/",d++):(o=l,h===0&&J(Vd))),o!==l&&(S=z())!==l&&(H=Il())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);a!==l;)m.push(a),a=d,(N=z())!==l?(b.charCodeAt(d)===42?(o="*",d++):(o=l,h===0&&J(Wd)),o===l&&(b.charCodeAt(d)===47?(o="/",d++):(o=l,h===0&&J(Vd))),o!==l&&(S=z())!==l&&(H=Il())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);m!==l?(x=Z,Z=c=zl(c,m)):(d=Z,Z=l)}else d=Z,Z=l;return Z}function Il(){var Z,c,m,a,N,o,S,H;if(Z=d,(c=gl())!==l){for(m=[],a=d,(N=z())!==l?(b.substr(d,2)===el?(o=el,d+=2):(o=l,h===0&&J(Rd)),o===l&&(b.charCodeAt(d)===37?(o="%",d++):(o=l,h===0&&J(wl))),o!==l&&(S=z())!==l&&(H=gl())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);a!==l;)m.push(a),a=d,(N=z())!==l?(b.substr(d,2)===el?(o=el,d+=2):(o=l,h===0&&J(Rd)),o===l&&(b.charCodeAt(d)===37?(o="%",d++):(o=l,h===0&&J(wl))),o!==l&&(S=z())!==l&&(H=gl())!==l?a=N=[N,o,S,H]:(d=a,a=l)):(d=a,a=l);m!==l?(x=Z,Z=c=zl(c,m)):(d=Z,Z=l)}else d=Z,Z=l;return Z}function gl(){var Z;return(Z=function(){var c,m,a,N,o;return c=d,m=function(){var S;return b.substr(d,5)===nd?(S=nd,d+=5):(S=l,h===0&&J(Xb)),S===l&&(b.substr(d,4)===ad?(S=ad,d+=4):(S=l,h===0&&J(Zb)),S===l&&(b.substr(d,5)===id?(S=id,d+=5):(S=l,h===0&&J(cb)),S===l&&(b.substr(d,3)==="abs"?(S="abs",d+=3):(S=l,h===0&&J(mb))))),S}(),m!==l&&z()!==l?(b.charCodeAt(d)===40?(a="(",d++):(a=l,h===0&&J(Gd)),a!==l&&z()!==l&&(N=jl())!==l&&z()!==l?(b.charCodeAt(d)===41?(o=")",d++):(o=l,h===0&&J(ud)),o!==l?(x=c,c=m={type:"mathfunction",op:m,expr:N}):(d=c,c=l)):(d=c,c=l)):(d=c,c=l),c}())===l&&(Z=function(){var c,m,a;return c=d,m=function(){var N,o,S,H,f,r,C,Q;if(N=d,o=function(){var B,I,k,T,P,M,dl,g,yl;if(B=d,b.charCodeAt(d)===123?(I="{",d++):(I=l,h===0&&J(Md)),I!==l)if(z()!==l)if((k=kl())!==l){for(T=[],P=d,(M=z())!==l?(b.charCodeAt(d)===44?(dl=",",d++):(dl=l,h===0&&J(md)),dl!==l&&(g=z())!==l&&(yl=kl())!==l?P=M=[M,dl,g,yl]:(d=P,P=l)):(d=P,P=l);P!==l;)T.push(P),P=d,(M=z())!==l?(b.charCodeAt(d)===44?(dl=",",d++):(dl=l,h===0&&J(md)),dl!==l&&(g=z())!==l&&(yl=kl())!==l?P=M=[M,dl,g,yl]:(d=P,P=l)):(d=P,P=l);T!==l&&(P=z())!==l?(b.charCodeAt(d)===125?(M="}",d++):(M=l,h===0&&J(Dd)),M!==l?(x=B,B=I={rolls:[k,...T.map(Rb=>Rb[3])],type:"group"}):(d=B,B=l)):(d=B,B=l)}else d=B,B=l;else d=B,B=l;else d=B,B=l;return B}(),o!==l){for(S=[],(H=tl())===l&&(H=ol())===l&&(H=pl())===l&&(H=Jl());H!==l;)S.push(H),(H=tl())===l&&(H=ol())===l&&(H=pl())===l&&(H=Jl());S!==l&&(H=z())!==l?((f=vl())===l&&(f=null),f!==l?(x=N,r=o,Q=f,(C=S).length>0&&(r.mods=(r.mods||[]).concat(C)),Q&&(r.label=Q),N=o=r):(d=N,N=l)):(d=N,N=l)}else d=N,N=l;return N}(),m===l&&(m=Sd())===l&&(m=Tl()),m!==l&&z()!==l?((a=vl())===l&&(a=null),a!==l?(x=c,c=m=L(m,a)):(d=c,c=l)):(d=c,c=l),c}())===l&&(Z=Pl()),Z}function Tl(){var Z,c,m,a;if(h++,Z=d,b.charCodeAt(d)===45?(c="-",d++):(c=l,h===0&&J(Cl)),c===l&&(c=null),c!==l){if(m=[],Yd.test(b.charAt(d))?(a=b.charAt(d),d++):(a=l,h===0&&J(sd)),a!==l)for(;a!==l;)m.push(a),Yd.test(b.charAt(d))?(a=b.charAt(d),d++):(a=l,h===0&&J(sd));else m=l;m!==l?(x=Z,Z=c={type:"number",value:parseInt(b.substring(x,d),10)}):(d=Z,Z=l)}else d=Z,Z=l;return h--,Z===l&&(c=l,h===0&&J(Gb)),Z}function vl(){var Z,c,m,a;if(Z=d,b.charCodeAt(d)===91?(c="[",d++):(c=l,h===0&&J(ub)),c!==l){if(m=[],ed.test(b.charAt(d))?(a=b.charAt(d),d++):(a=l,h===0&&J(hd)),a!==l)for(;a!==l;)m.push(a),ed.test(b.charAt(d))?(a=b.charAt(d),d++):(a=l,h===0&&J(hd));else m=l;m!==l?(b.charCodeAt(d)===93?(a="]",d++):(a=l,h===0&&J(Wb)),a!==l?(x=Z,Z=c=m.join("")):(d=Z,Z=l)):(d=Z,Z=l)}else d=Z,Z=l;return Z}function z(){var Z,c;for(h++,Z=[],pd.test(b.charAt(d))?(c=b.charAt(d),d++):(c=l,h===0&&J(Jd));c!==l;)Z.push(c),pd.test(b.charAt(d))?(c=b.charAt(d),d++):(c=l,h===0&&J(Jd));return h--,Z===l&&(c=l,h===0&&J(Vb)),Z}const wd={type:"target",mod:"=",value:{type:"number",value:1}},Cd={type:"number",value:1};if((X=n())!==l&&d===b.length)return X;throw X!==l&&d<b.length&&J({type:"end"}),Ml=rl,Dl=Zl<b.length?b.charAt(Zl):null,zd=Zl<b.length?vd(Zl,Zl+1):vd(Zl,Zl),new e(e.buildMessage(Ml,Dl),Ml,Dl,zd);var Ml,Dl,zd}}}},Y={};return function R(e){var b=Y[e];if(b!==void 0)return b.exports;var i=Y[e]={exports:{}};return G[e].call(i.exports,i,i.exports,R),i.exports}(607)})())})(Ed);var Nb=Ed.exports;let ql=0;class Sb{constructor(u={}){this.rollsAsFloats=[],this.dieGroups=[],this.parsedNotation=null,this.finalResults=null,this.targetRollsCritSuccess=u?.targetRollsCritSuccess||u?.targetRollsCrit||!1,this.targetRollsCritFailure=u?.targetRollsCritFailure||u?.targetRollsCrit||!1,this.initParser()}initParser(){this.rollParser=new Nb.DiceRoller((u=this.rollsAsFloats)=>u.length>0?u[ql++]:(console.warn("No result was passed to the dice-roller-parser. Using fallback Math.random"),Math.random()))}parseNotation(u){this.clear(),u=u.replace(/d00/,"d%"),this.parsedNotation=this.rollParser.parse(u);const G=Y=>{const R=Y.die.value||Y.die.type;this.dieGroups.push({qty:Y.count.value,sides:R,mods:Y.mods})};return this.recursiveSearch(this.parsedNotation,"die",[],G),this.dieGroups}rollNotation(u){return this.finalResults=this.rollParser.rollParsed(u),this.finalResults}clear(){ql=0,this.rollsAsFloats=[],this.dieGroups=[],this.parsedNotation=null,this.finalResults=null}recursiveSearch(u,G,Y=[],R){const e=Y;return Object.keys(u).forEach(b=>{const i=u[b];b===G?(e.push(i),R&&typeof R=="function"&&R(u)):i&&typeof i=="object"&&this.recursiveSearch(i,G,e,R)}),e}incrementId(u){u=u.toString();let G=u.split(".");return G[1]?G[1]=parseInt(G[1])+1:G[1]=1,G[0]+"."+G[1]}handleRerolls(u=[]){const G=[];return u.forEach((Y,R)=>{if(Y.mods?.length>0){const e=(X,l,W)=>{switch(l){case">":return X>=W;case"<":return X<=W;case"=":default:return X==W}},b=Y.rolls.map(X=>X.rollId),i=X=>{const l=this.incrementId(X);return b.includes(l)};Y.mods.forEach(X=>{const l={...Y.rolls};switch(X.type){case"explode":case"compound":Object.entries(l).forEach(([W,n])=>{const V=n.sides,s=X.target?.value?.value||V,t=X.target?.mod||">";e(n.value,t,s)&&!i(n.rollId)&&G.push({groupId:R,rollId:this.incrementId(n.rollId),sides:n.sides,qty:1})});break;case"penetrate":Object.entries(l).forEach(([W,n])=>{const V=n.sides,s=X.target?.value?.value||V,t=X.target?.mod||"=";e(n.value,t,s)&&!i(n.rollId)&&G.push({groupId:R,rollId:this.incrementId(n.rollId),sides:n.sides,qty:1})});break;case"reroll":Object.entries(l).forEach(([W,n])=>{n.sides,e(n.value,X.target.mod,X.target.value.value)&&!i(n.rollId)&&G.push({groupId:R,rollId:this.incrementId(n.rollId),sides:n.sides,qty:1})});break;case"rerollOnce":Object.entries(l).forEach(([W,n])=>{const V=X.target?.value?.value,s=X.target.mod;e(n.value,s,V)&&!i(n.rollId)&&!n.rollId.toString().includes(".")&&G.push({groupId:R,rollId:this.incrementId(n.rollId),sides:n.sides,qty:1})});break}})}}),G}handleTargetCritSuccess(u=[]){u.rolls.forEach(G=>{G.successes>=1&&G.critical==="success"&&(G.successes+=1,u.value+=1)})}handleTargetCritFailure(u=[]){u.rolls.forEach(G=>{G.failures>=1&&G.critical==="failure"&&(G.failures+=1,u.value-=1)})}parseFinalResults(u=[]){let G=this.recursiveSearch(u,"rolls");(G.length?G:[u]).forEach(e=>Object.entries(e).forEach(([b,i])=>{try{let X=i.sides;const l=/[dD]\d+/i;typeof X=="string"&&X.match(l)&&(X=parseInt(i.sides.substring(1))),X&&(X==="fate"?this.rollsAsFloats.push((i.value+2)*.25):this.rollsAsFloats.push((i.value-1)/X))}catch{throw console.error("This object is not a properly formatted roll object.",i),new Error("Unable to parse final results")}}));const R=this.rollParser.rollParsed(this.parsedNotation);return this.targetRollsCritSuccess&&R.success!==null&&this.handleTargetCritSuccess(R),this.targetRollsCritFailure&&R.success!==null&&this.handleTargetCritFailure(R),this.finalResults=R,ql=0,this.rollsAsFloats=[],R}}function fb(p){let u=[];p.rolls&&!Array.isArray(p.rolls)?u=Object.values(p.rolls).map(R=>R):u=Object.values(Id(p,"rolls")).map(R=>Object.values(R)).flat();let G=0;if(p.hasOwnProperty("value"))G=p.value;else{G=u.reduce((e,b)=>e+b.value,0);let R=p.reduce((e,b)=>e+b.modifier,0);G+=R}G=isNaN(G)?"...":G;let Y="";return u.forEach((R,e)=>{let b,i=R.die||R.sides||"fate";e!==0&&(Y+=", "),R.success!==void 0&&R.success!==null?b=R.success?'<img class="success" id="checkSvg" src="/checkmark.svg" alt="Check Image">':R.failures>0?'<img class="failure" id="cancelSvg" src="/cancel.svg" alt="Cancel Image">':'<img class="null" id="minusSvg" src="/minus.svg" alt="Minus Image">':b=R.hasOwnProperty("value")?R.value.toString():"...";let X=`d${i}`;(R.critical==="success"||R.hasOwnProperty("value")&&i==R.value)&&(X+=" crit-success"),(R.critical==="failure"||R.success===null&&R.hasOwnProperty("value")&&R.value<=1&&i!=="fate")&&(X+=" crit-failure"),R.drop&&(X+=" die-dropped"),R.reroll&&(X+=" die-rerolled"),R.explode&&(X+=" die-exploded"),i==="fate"&&(R.value===1&&(X+=" crit-success"),R.value===-1&&(X+=" crit-failure")),X!==""&&(b=`<span class='${X.trim()}'>${b}</span>`),Y+=b}),Y+=` = <strong>${G}</strong>`,Y}function Id(p,u,G=[],Y){const R=G;return Object.keys(p).forEach(e=>{const b=p[e];e===u?(R.push(b),Y&&typeof Y=="function"&&Y(p)):b&&typeof b=="object"&&Id(b,u,R,Y)}),R}j.onReady(async()=>{let p=await j.room.getMetadata(),u=await j.player.getId(),G=await j.player.getName(),Y=await j.player.getColor(),R=p[$.DICECOLORSETTING+u],e=p[$.DICETEXTURESETTING+u],b="SELF",i=!1,X,l="",W="",n="ALL";const V=new Sb,s=new Lb("#bones-window-body-app",{id:"dice-canvas",assetPath:"/assets/dice-box/",startingHeight:8,throwForce:10,spinForce:5,gravity:2,lightIntensity:1,scale:4,enableShadows:!0,shadowTransparency:.5,theme:e,themeColor:R});s.onRollComplete=async t=>{const L=V.handleRerolls(t);if(L.length)return L.forEach(A=>s.add(A,A.groupId)),L;const y=V.parseFinalResults(t),v=fb(y),E={created:new Date().toISOString(),rollHtml:v,senderColor:W,senderId:u,senderName:l,viewers:n};await j.player.setMetadata({[`${$.EXTENSIONID}/metadata_logroll`]:E});const U=`You rolled a ${y.value}!`;await j.notification.show(U,"DEFAULT"),clearTimeout(X),setTimeout(async()=>{await j.popover.setHeight($.EXTENSIONDICEWINDOWID,0),await j.popover.setWidth($.EXTENSIONDICEWINDOWID,0)},1e3)};try{s.init()}catch{await j.notification.show("Unable to initialize 3D-Dice","ERROR"),i=!0}j.room.onMetadataChange(t=>{R=t[$.DICECOLORSETTING+u],e=t[$.DICETEXTURESETTING+u],s.updateConfig({theme:e,themeColor:R})}),j.player.onChange(async t=>{if(Y=t.color,G=t.name,u=t.id,i)await j.notification.show("Unable to display Dice in your browser","ERROR");else if(t.metadata[`${$.EXTENSIONID}/metadata_bonesroll`]!=null){const L=t.metadata[`${$.EXTENSIONID}/metadata_bonesroll`];if(!nb.IsThisOld(L.created,u,"DEFAULT")){l=L.senderName??G,n=L.viewers??b,W=L.senderColor??Y;const y=await j.viewport.getHeight(),v=await j.viewport.getWidth();await j.popover.setHeight($.EXTENSIONDICEWINDOWID,y-50),await j.popover.setWidth($.EXTENSIONDICEWINDOWID,v-50);try{s.hide().clear(),s.show().roll(V.parseNotation(L.notation)),X=setTimeout(async()=>{await j.popover.setHeight($.EXTENSIONDICEWINDOWID,0),await j.popover.setWidth($.EXTENSIONDICEWINDOWID,0)},6e3)}catch(w){await j.notification.show("Unable to display Dice in your browser:"+w,"ERROR"),await j.popover.setHeight($.EXTENSIONDICEWINDOWID,0),await j.popover.setWidth($.EXTENSIONDICEWINDOWID,0),i=!0}}}})});export{xb as p};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/world.onscreen-JMcmWs8J.js","assets/Dice-QCN5CpDK.js","assets/bsConstants-E4N5t5Rc.js","assets/bsSceneCache-cV13Ardw.js","assets/world.none-kTzKGfUx.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
